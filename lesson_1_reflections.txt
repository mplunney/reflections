How did viewing a diff between two versions 
of a file help you see the bug that was introduced?

It allowed me to compare the text line by line
to look for discrepancies between them.


How could having easy access to the entire history 
of a file make you a more efficient programmer 
in the long term?

With effective descriptive commenting you could
work through a block of code in sections 
verifying pieces that work as you go along.


What do you think are the pros and cons of 
manually choosing when to create a commit, 
like you do in Git, vs having versions automatically saved, 
like Google Docs does?

Having logical save points throughout devleopment
vs forgetting to actually be cognizant and save.


Why do you think some version control systems, like Git, 
allow saving multiple files in one commit, 
while others, like Google Docs, treat each file separately?

Users of Google Docs are much more likely to have
files that function completely independently
than someone using Git to create a functioning program.


How can you use the commands git log and git diff 
to view the history of files?

Git log allows you to see transactions
and git diff allows you to compare files.


How might using version control make you more confident 
to make changes that could break something?

You can commit code known to be working and then branch 
to experiment with existing or add new code.


Now that you have your workspace set up, what do you want to try using Git for? 

Code for data analysis. 
